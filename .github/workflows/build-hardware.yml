name: Build Hardware Projects

on:
  push:
    branches: [master, main]
    paths:
      - 'hardware/**'
      - '.github/workflows/build-hardware.yml'
  pull_request:
    branches: [master, main]
    paths:
      - 'hardware/**'
      - '.github/workflows/build-hardware.yml'
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-hardware:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        project: [imu81, imu-array-dev]
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ matrix.project }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ matrix.project }}-
          ${{ runner.os }}-buildx-
    
    - name: Pull Docker image
      run: docker pull ghcr.io/inti-cmnb/kicad_auto_full:dev_k9
      
    - name: Build ${{ matrix.project }}
      run: |
        cd hardware/${{ matrix.project }}
        make build
        
    - name: List output files
      run: |
        echo "Generated files for ${{ matrix.project }}:"
        find hardware/outputs/ -type f -name "*${{ matrix.project }}*" -o -name "*" | head -20
      continue-on-error: true
        
    - name: Upload build artifacts for ${{ matrix.project }}
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ matrix.project }}-outputs
        path: hardware/outputs/
        retention-days: 7
        
    - name: Upload ${{ matrix.project }} gerbers
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ matrix.project }}-gerbers
        path: |
          hardware/outputs/*${{ matrix.project }}*gerbers*.zip
          hardware/outputs/*gerbers*.zip
        retention-days: 7
      continue-on-error: true

  summary:
    runs-on: ubuntu-latest
    needs: build-hardware
    if: always()
    
    steps:
    - name: Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Project | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| imu81 | ${{ needs.build-hardware.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| imu-array-dev | ${{ needs.build-hardware.result }} |" >> $GITHUB_STEP_SUMMARY
